"use strict";

var win;

!function(){ DocReady(init) }();

function init() {
  win = {
    w : Math.max(document.documentElement.clientWidth, window.innerWidth || 0),
    h : Math.max(document.documentElement.clientHeight, window.innerHeight || 0)
  };
  win.landscape = (win.w > win.h);
  init_tw();
  init_caption();
  document.querySelector("#iframe_1_bit").setAttribute("src", /*DomainName + */"/showcase/misc/_1_bit");
}

async function init_tw() {
  var tw1 = new TypeWriter("tw", 30);
  // var tw1 = new TypeFader("core", 1500);
  await tw1.TypeClr([ [, "Hi! I'm "],
                      ["#66fcf1", "Paul de Renty"],
                      [, "."]
                    ], false);
  await tw1.Sleep(2000);
  await tw1.Add("<br>");
  await tw1.TypeClr([ [, "I enjoy programming, particularly in "],
                      ["#fcad0f", "JavaScript"]
                    ], false);
  await init_logo("#skill_js","js_logo2",100,100);
  await tw1.Sleep(1000);
  await tw1.TypeClr([ [, ", "],
                      ["#fcad0f", "Golang"]
                    ], false);
  await init_logo("#skill_go","go_logo",268,116);
  logo[logo.length - 1].Scale(0.8, 100);
  await tw1.Sleep(1000);
  await tw1.TypeClr([ [, ", and "],
                      ["#fcad0f", "C/C++"]
                    ], false);
  await init_logo("#skill_cpp","cpp_logo2",100,100);
  pulse_logos();
}

async function init_caption() {
  var tw2 = new TypeFader("caption", 2000);
  await tw2.MultiType(["This is my 1-bit black/white portrait!"
                      ,"It was generated by a Floyd-Steinberg dithering algorithm of my own."]
                      , true);
}

let logo = [];
async function init_logo(_div_id,_svg_id,_width,_height/*,_markup*/) {
  let _logo = new TinySVG({
    parent_id: _div_id,
    id: _svg_id,
    w: _width,
    h: _height,
    scale: (0.075 * (win.landscape ? win.h : win.w) / 100)*3,
    fill: "#ffffff",
    display : "grid",
    core: ""/*_markup*/
  });
  _logo.OnMouseOver(function() {
    _logo.Fill("#fcad0f"); //color to orange
  });
  _logo.OnMouseOut(function() {
    _logo.Fill("#ffffff"); //color back to blue
  });
  _logo.Spawn();
  _logo.Scale(0.33, 300);
  await sleep(500);
  logo[logo.length] = _logo;
}
async function pulse_logos() {
  while (true) {
    for (let i = 0; i < logo.length; i++) {
      // logo[i].Fill("#66fcf1");
      await logo[i].Scale(6/3,400);
      await sleep(1500)
      logo[i].Scale(1/(6/3),400);
      // logo[i].Fill("#ffffff");
    }
  }
}